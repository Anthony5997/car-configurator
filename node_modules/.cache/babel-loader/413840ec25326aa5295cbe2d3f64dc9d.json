{"ast":null,"code":"var _jsxFileName = \"/home/simplon/Documents/redux-car-configurator/src/redux/components/Accessories/Multimedia.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Carousel, Row, Col, Card, CardTitle, Collection, CollectionItem } from 'react-materialize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Multimedia = ({\n  state,\n  multimedia\n}) => {\n  console.log(\"multimedia : \", multimedia.name);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"driving\",\n    children: [/*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        m: 8,\n        s: 12,\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          carouselId: \"Carousel-61\",\n          images: [],\n          options: {\n            fullWidth: true,\n            indicators: true\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        m: 4,\n        s: 12,\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: /*#__PURE__*/_jsxDEV(Col, {\n            m: 6,\n            s: 12,\n            children: /*#__PURE__*/_jsxDEV(Collection, {\n              children: [/*#__PURE__*/_jsxDEV(CollectionItem, {\n                href: \"#\",\n                children: \"Alvin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CollectionItem, {\n                active: true,\n                href: \"#\",\n                children: \"Alvin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CollectionItem, {\n                href: \"#\",\n                children: \"Alvin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(CollectionItem, {\n                href: \"#\",\n                children: \"Alvin\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 46,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        m: 3,\n        s: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), multimedia.map(option => /*#__PURE__*/_jsxDEV(Col, {\n        m: 3,\n        s: 12,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          className: \"itemDriving\",\n          header: /*#__PURE__*/_jsxDEV(CardTitle, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 29\n          }, this),\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"equipementName\",\n            children: option.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: [option.price, \" \", /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"material-icons\",\n              children: \"attach_money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 21\n          }, this)]\n        }, option, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Multimedia;\n\nconst mapStateToProps = state => {\n  return {\n    state: state,\n    multimedia: state.jsonOption.accessories.multimedia.support\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {};\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Multimedia);\n\nvar _c;\n\n$RefreshReg$(_c, \"Multimedia\");","map":{"version":3,"sources":["/home/simplon/Documents/redux-car-configurator/src/redux/components/Accessories/Multimedia.js"],"names":["React","connect","Carousel","Row","Col","Card","CardTitle","Collection","CollectionItem","Multimedia","state","multimedia","console","log","name","fullWidth","indicators","map","option","price","mapStateToProps","jsonOption","accessories","support","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Carousel, Row, Col, Card, CardTitle, Collection, CollectionItem } from 'react-materialize'; \n \n\nconst Multimedia = ({state, multimedia}) => {\n\n    console.log(\"multimedia : \" , multimedia.name);\n\n\nreturn(\n    <div className='driving'>\n        <Row>\n        <Col m={8} s={12}>\n        <Carousel\n        carouselId=\"Carousel-61\"\n        images={[\n\n        \n        ]}\n        options={{\n            fullWidth: true,\n            indicators: true\n        }}\n        />\n        </Col>\n        <Col m={4} s={12}>\n        <Row>\n            <Col\n                m={6}\n                s={12}\n            >\n                <Collection>\n                <CollectionItem href=\"#\">\n                    Alvin\n                </CollectionItem>\n                <CollectionItem\n                    active\n                    href=\"#\"\n                >\n                    Alvin\n                </CollectionItem>\n                <CollectionItem href=\"#\">\n                    Alvin\n                </CollectionItem>\n                <CollectionItem href=\"#\">\n                    Alvin\n                </CollectionItem>\n                </Collection>\n            </Col>\n            </Row>\n        </Col>\n        </Row>\n        <Row>\n            <Col m={3} s={12} >\n         \n                </Col>\n        {\n            multimedia.map(option => (\n                <Col m={3} s={12} >\n                    <Card className='itemDriving'\n                    key={option}\n                    header={<CardTitle />}\n                    > \n                    <p className='equipementName'>{option.name}</p>\n                    <p>{option.price} <i class=\"material-icons\">attach_money</i></p>\n                    </Card> \n                </Col>\n            ))}\n            </Row>\n    </div>\n)}\nconst mapStateToProps = state =>{\n    return{\n        state : state,\n        multimedia : state.jsonOption.accessories.multimedia.support\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n        \n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Multimedia)"]},"metadata":{},"sourceType":"module"}