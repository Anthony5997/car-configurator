{"ast":null,"code":"var _jsxFileName = \"/home/simplon/Documents/redux-car-configurator/src/redux/components/Versions.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Card, CardTitle, Icon } from 'react-materialize';\nimport { getVersion, getResJson } from \"../actions\";\nimport Configurator from \"./Configurator\";\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Versions = ({\n  state,\n  getVersion,\n  getResJson\n}) => {\n  console.log(\"state version\", state);\n\n  const onChange = version => {\n    getVersion(version);\n    getResJson(version);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state.version === null && /*#__PURE__*/_jsxDEV(Row, {\n      className: \"choiseVersion\",\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        s: 12,\n        m: 6,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Configurateur\",\n          onClick: () => onChange('Pure'),\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            header: /*#__PURE__*/_jsxDEV(CardTitle, {\n              image: state.photoPure,\n              reveal: true,\n              waves: \"light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 21\n            }, this),\n            title: \"Pure\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Configurer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        s: 12,\n        m: 6,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Configurateur\",\n          onClick: () => onChange('Legende'),\n          children: /*#__PURE__*/_jsxDEV(Card, {\n            header: /*#__PURE__*/_jsxDEV(CardTitle, {\n              image: state.photoLegende,\n              reveal: true,\n              waves: \"light\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 21\n            }, this),\n            title: \"Legende\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: \"Configurer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Versions;\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getVersion: choseVersion => dispatch(getVersion(choseVersion)),\n    getResJson: version => dispatch(getResJson(version))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Versions);\n\nvar _c;\n\n$RefreshReg$(_c, \"Versions\");","map":{"version":3,"sources":["/home/simplon/Documents/redux-car-configurator/src/redux/components/Versions.js"],"names":["React","connect","Row","Col","Card","CardTitle","Icon","getVersion","getResJson","Configurator","Link","Versions","state","console","log","onChange","version","photoPure","photoLegende","mapStateToProps","mapDispatchToProps","dispatch","choseVersion"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,GAAT,EAAcC,GAAd,EAAmBC,IAAnB,EAAyBC,SAAzB,EAAoCC,IAApC,QAAgD,mBAAhD;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,YAAvC;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQL,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AACtDK,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA8BF,KAA9B;;AAEI,QAAMG,QAAQ,GAAIC,OAAD,IAAa;AAC5BT,IAAAA,UAAU,CAACS,OAAD,CAAV;AACAR,IAAAA,UAAU,CAACQ,OAAD,CAAV;AAED,GAJD;;AAMJ,sBACI;AAAA,cACIJ,KAAK,CAACI,OAAN,KAAkB,IAAlB,iBAEA,QAAC,GAAD;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAE,EAAR;AAAY,QAAA,CAAC,EAAE,CAAf;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,gBAAT;AAA0B,UAAA,OAAO,EAAE,MAAID,QAAQ,CAAC,MAAD,CAA/C;AAAA,iCACE,QAAC,IAAD;AACA,YAAA,MAAM,eAAE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAEH,KAAK,CAACK,SAAxB;AAAmC,cAAA,MAAM,MAAzC;AAA0C,cAAA,KAAK,EAAC;AAAhD;AAAA;AAAA;AAAA;AAAA,oBADR;AAEA,YAAA,KAAK,EAAC,MAFN;AAAA,mCAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cADF,eAcE,QAAC,GAAD;AAAK,QAAA,CAAC,EAAE,EAAR;AAAY,QAAA,CAAC,EAAE,CAAf;AAAA,+BACA,QAAC,IAAD;AAAM,UAAA,EAAE,EAAC,gBAAT;AAA0B,UAAA,OAAO,EAAE,MAAIF,QAAQ,CAAC,SAAD,CAA/C;AAAA,iCACE,QAAC,IAAD;AACA,YAAA,MAAM,eAAE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAEH,KAAK,CAACM,YAAxB;AAAsC,cAAA,MAAM,MAA5C;AAA6C,cAAA,KAAK,EAAC;AAAnD;AAAA;AAAA;AAAA;AAAA,oBADR;AAEA,YAAA,KAAK,EAAC,SAFN;AAAA,mCAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAJA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,cAdF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAkCE,CA3CF;;KAAMP,Q;;AA4CN,MAAMQ,eAAe,GAAGP,KAAK,IAAG;AAC5B,SAAM;AACFA,IAAAA,KAAK,EAAGA;AADN,GAAN;AAGH,CAJD;;AAKA,MAAMQ,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACJd,IAAAA,UAAU,EAAEe,YAAD,IAAiBD,QAAQ,CAACd,UAAU,CAACe,YAAD,CAAX,CADhC;AAEJd,IAAAA,UAAU,EAAEQ,OAAD,IAAYK,QAAQ,CAACb,UAAU,CAACQ,OAAD,CAAX;AAF3B,GAAN;AAIH,CALD;;AAMA,eAAef,OAAO,CAACkB,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CT,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Card, CardTitle, Icon } from 'react-materialize';\nimport { getVersion, getResJson } from \"../actions\";\nimport Configurator from \"./Configurator\";\nimport { Link } from 'react-router-dom';\n\n \nconst Versions = ({state, getVersion, getResJson}) => {\nconsole.log(\"state version\" , state)\n\n    const onChange = (version) => {\n      getVersion(version)\n      getResJson(version)\n    \n    }\n\nreturn(\n    <div>\n      { state.version === null &&\n  \n        <Row className='choiseVersion'>\n          <Col s={12} m={6}> \n          <Link to='/Configurateur' onClick={()=>onChange('Pure')}>\n            <Card\n            header={<CardTitle image={state.photoPure} reveal waves=\"light\"/>}\n            title=\"Pure\"\n            >\n            <p>\n                Configurer\n            </p>\n            </Card>\n            </Link>\n          </Col>\n\n          <Col s={12} m={6}>\n          <Link to='/Configurateur' onClick={()=>onChange('Legende')}>\n            <Card\n            header={<CardTitle image={state.photoLegende} reveal waves=\"light\"/>}\n            title=\"Legende\"\n            >\n            <p>\n                Configurer\n            </p>\n            </Card>\n            </Link>\n          </Col>\n        </Row>\n      }\n    \n    </div>\n)}\nconst mapStateToProps = state =>{\n    return{\n        state : state\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n      getVersion:(choseVersion)=> dispatch(getVersion(choseVersion)),\n      getResJson:(version)=> dispatch(getResJson(version)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Versions)"]},"metadata":{},"sourceType":"module"}