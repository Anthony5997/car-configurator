{"ast":null,"code":"var _jsxFileName = \"/home/simplon/Documents/redux-car-configurator/src/redux/components/Sealing.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Carousel, Button, Icon } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nimport { parseSealSelected, getMenu, getEquipementPannel } from \"../actions\";\nimport Menu from \"./Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Sealing = ({\n  state,\n  parseSealSelected,\n  getMenu,\n  getEquipementPannel\n}) => {\n  console.log(\"state sealing : \", state);\n  let mappedSeal = state.sealingJson;\n\n  const getSeal = currentSelect => {\n    parseSealSelected(currentSelect);\n  };\n\n  const displaySeal = () => mappedSeal.map(seal => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"\",\n          s: 6,\n          m: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-color-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"seal pictures\",\n              src: seal.picture,\n              onClick: () => getSeal(seal)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 25\n            }, this), seal.name, \"  \", /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"material-icons\",\n              children: \"attach_money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 26,\n              columnNumber: 37\n            }, this), seal.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, seal, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  });\n\n  const mappedSealPics = () => state.currentSelection.sealing.views.map(key => {\n    return `${key}`;\n  });\n\n  const getMenuAndPannel = () => {\n    getMenu('equipments');\n    getEquipementPannel();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sealing\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"car-name\",\n      children: state.currentSelection.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: displaySeal()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 12\n    }, this), state.currentSelection.sealing === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sealing-carousel\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: mappedSeal[0].picture\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this), state.currentSelection.sealing !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sealing-carousel\",\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        className: \"carrousel-select\",\n        carouselId: \"Carousel-3\",\n        images: [mappedSealPics()],\n        options: {\n          dist: 0,\n          duration: 200,\n          fullWidth: true,\n          indicators: true,\n          noWrap: false,\n          numVisible: 5,\n          onCycleTo: null,\n          padding: 0,\n          shift: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 17\n    }, this), state.currentSelection.color === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"select-car-please\",\n        children: \" Please, select a car.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerButton\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Jantes\",\n        onClick: () => getMenu('rims'),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          node: \"button\",\n          waves: \"light\",\n          className: \"blue-grey darken-4\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            left: true,\n            children: \"arrow_back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 29\n          }, this), \"Etape pr\\xE9c\\xE9dente\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Conduite\",\n        onClick: () => getMenuAndPannel(),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          node: \"button\",\n          waves: \"light\",\n          className: \"blue-grey darken-4\",\n          children: [\"Etape suivante\", /*#__PURE__*/_jsxDEV(Icon, {\n            right: true,\n            children: \"arrow_forward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 18\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 8\n  }, this);\n};\n\n_c = Sealing;\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    parseSealSelected: data => dispatch(parseSealSelected(data)),\n    getMenu: data => dispatch(getMenu(data)),\n    getEquipementPannel: () => dispatch(getEquipementPannel('conduite'))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sealing);\n\nvar _c;\n\n$RefreshReg$(_c, \"Sealing\");","map":{"version":3,"sources":["/home/simplon/Documents/redux-car-configurator/src/redux/components/Sealing.js"],"names":["React","connect","Row","Col","Carousel","Button","Icon","Link","parseSealSelected","getMenu","getEquipementPannel","Menu","Sealing","state","console","log","mappedSeal","sealingJson","getSeal","currentSelect","displaySeal","map","seal","picture","name","price","mappedSealPics","currentSelection","sealing","views","key","getMenuAndPannel","dist","duration","fullWidth","indicators","noWrap","numVisible","onCycleTo","padding","shift","color","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Carousel, Button, Icon } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nimport { parseSealSelected, getMenu, getEquipementPannel } from \"../actions\";\nimport Menu from \"./Menu\";\n\n\n\nconst Sealing = ({state, parseSealSelected, getMenu, getEquipementPannel}) => {\n\n    console.log(\"state sealing : \", state);\n    let mappedSeal = state.sealingJson\n\n    const getSeal = (currentSelect) => {\n            parseSealSelected(currentSelect)\n    }\n\n    const displaySeal = () => mappedSeal.map((seal) => {\n        return (\n            <div key={seal}>\n                <div className=\"container\">\n                    <Col className=\"\" s={6} m={6} >\n                       <div className=\"custom-color-select\">\n                        <img alt=\"seal pictures\" src={seal.picture} onClick={() => (getSeal(seal))}/>\n                       {seal.name}  <i class=\"material-icons\">attach_money</i>\n                        {seal.price}\n                       </div>\n                    </Col>\n                </div>\n            </div>\n        )\n    })\n\n    const mappedSealPics = () => state.currentSelection.sealing.views.map((key) => {\n        return (\n            `${key}`\n        )\n    })\n\n    const getMenuAndPannel = () => {\n\n        getMenu('equipments');\n        getEquipementPannel();\n    }\n\n    return(\n\n       <div className='sealing'>\n            <div className='menu'>\n        <Menu />\n        </div> \n           <h3 className=\"car-name\">{state.currentSelection.name}</h3>\n           <Row>\n                {displaySeal()}\n            </Row>\n            {state.currentSelection.sealing === null && \n                <div className='sealing-carousel'>\n                    <img src={mappedSeal[0].picture}></img>\n                 </div>\n           }  \n            {state.currentSelection.sealing !== null && \n                <div className=\"sealing-carousel\">\n                    <Carousel \n                        className=\"carrousel-select\"\n                        carouselId=\"Carousel-3\"\n                        images={[\n                    \n                        mappedSealPics()\n                        ]}\n                        options={{\n                            dist: 0,\n                            duration: 200,\n                            fullWidth: true,\n                            indicators: true,\n                            noWrap: false,\n                            numVisible: 5,\n                            onCycleTo: null,\n                            padding: 0,\n                            shift: 0\n                        }}\n                    />\n                </div>\n            }\n            {state.currentSelection.color === null &&\n                <div className=\"container\">\n                    <h1 className=\"select-car-please\"> Please, select a car.</h1>\n                </div>\n            }\n                 <div className=\"containerButton\">\n                    <Link to=\"/Jantes\" onClick={()=>getMenu('rims')}>\n                       \n                        <Button node=\"button\" waves=\"light\" className='blue-grey darken-4'>\n                            <Icon left>\n                                arrow_back\n                            </Icon>\n                            Etape précédente\n                            \n                        </Button>\n                        \n                    </Link>\n\n                    <Link to=\"/Conduite\" onClick={()=>getMenuAndPannel()}>\n                      \n                        <Button node=\"button\" waves=\"light\" className='blue-grey darken-4'>\n                            Etape suivante\n                            <Icon right>\n                             arrow_forward\n                            </Icon>\n                        </Button>\n                        \n                    </Link>\n            </div>\n        </div>\n    )}\n\nconst mapStateToProps = state =>{\n    return{\n        state: state,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n\n        parseSealSelected: (data)=> dispatch(parseSealSelected(data)),\n        getMenu: (data)=> dispatch(getMenu(data)),\n        getEquipementPannel : ()=>dispatch(getEquipementPannel('conduite'))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Sealing)"]},"metadata":{},"sourceType":"module"}