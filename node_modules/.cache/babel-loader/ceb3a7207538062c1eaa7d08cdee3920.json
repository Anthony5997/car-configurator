{"ast":null,"code":"export const getDataVersion = data => {\n  return {\n    type: 'GET_VERSION',\n    data\n  };\n};\nexport const getData = () => {\n  return {\n    type: 'FETCHING_DATA'\n  };\n};\nexport const getDataJson = (version, option) => {\n  return {\n    type: 'GET_RES_JSON',\n    version: version,\n    option: option\n  };\n};\nexport const parseColor = color => {\n  return {\n    color: color\n  };\n};\nexport const getVersion = data => {\n  return dispatch => {\n    dispatch(getDataVersion(data));\n  };\n};\nexport const getResJson = version => {\n  return dispatch => {\n    dispatch(getData());\n    fetch('../../alpine.json').then(res => {\n      return res.json();\n    }).then(data => {\n      if (version === 'Pure') {\n        dispatch(getDataJson(data.version.pure, data.option));\n      } else if (version === 'Legende') {\n        dispatch(getDataJson(data.version.legende, data.option));\n      }\n    }).catch(error => console.log(error));\n  };\n};\nexport const parseColorSelected = color => {\n  return {\n    type: \"CHOOSEN_COLOR\"\n  };\n};","map":{"version":3,"sources":["/home/simplon/Documents/redux-car-configurator/src/redux/actions/index.js"],"names":["getDataVersion","data","type","getData","getDataJson","version","option","parseColor","color","getVersion","dispatch","getResJson","fetch","then","res","json","pure","legende","catch","error","console","log","parseColorSelected"],"mappings":"AAAA,OAAO,MAAMA,cAAc,GAAIC,IAAD,IAAU;AAChC,SAAM;AACHC,IAAAA,IAAI,EAAG,aADJ;AAEFD,IAAAA;AAFE,GAAN;AAKH,CANE;AAQH,OAAO,MAAME,OAAO,GAAG,MAAM;AACzB,SAAO;AACHD,IAAAA,IAAI,EAAG;AADJ,GAAP;AAGH,CAJM;AAOX,OAAO,MAAME,WAAW,GAAG,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC5C,SAAM;AACHJ,IAAAA,IAAI,EAAG,cADJ;AAEHG,IAAAA,OAAO,EAAEA,OAFN;AAGHC,IAAAA,MAAM,EAAGA;AAHN,GAAN;AAMH,CAPM;AASP,OAAO,MAAMC,UAAU,GAAIC,KAAD,IAAW;AAEjC,SAAO;AACHA,IAAAA,KAAK,EAAGA;AADL,GAAP;AAGH,CALM;AAOP,OAAO,MAAMC,UAAU,GAAIR,IAAD,IAAU;AAChC,SAAQS,QAAD,IAAc;AACbA,IAAAA,QAAQ,CAACV,cAAc,CAACC,IAAD,CAAf,CAAR;AAEP,GAHD;AAIH,CALM;AAOP,OAAO,MAAMU,UAAU,GAAIN,OAAD,IAAa;AAEnC,SAAQK,QAAD,IAAc;AACjBA,IAAAA,QAAQ,CAACP,OAAO,EAAR,CAAR;AACJS,IAAAA,KAAK,CAAC,mBAAD,CAAL,CACCC,IADD,CACOC,GAAD,IAAS;AACX,aAAOA,GAAG,CAACC,IAAJ,EAAP;AAAkB,KAFtB,EAGCF,IAHD,CAGMZ,IAAI,IAAI;AACV,UAAII,OAAO,KAAK,MAAhB,EAAuB;AACnBK,QAAAA,QAAQ,CAACN,WAAW,CAACH,IAAI,CAACI,OAAL,CAAaW,IAAd,EAAoBf,IAAI,CAACK,MAAzB,CAAZ,CAAR;AACH,OAFD,MAEM,IAAGD,OAAO,KAAK,SAAf,EAAyB;AAC5BK,QAAAA,QAAQ,CAACN,WAAW,CAACH,IAAI,CAACI,OAAL,CAAaY,OAAd,EAAuBhB,IAAI,CAACK,MAA5B,CAAZ,CAAR;AACF;AACJ,KATD,EAUCY,KAVD,CAUOC,KAAK,IAAIC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CAVhB;AAWC,GAbD;AAeH,CAjBM;AAoBP,OAAO,MAAMG,kBAAkB,GAAId,KAAD,IAAW;AACzC,SAAO;AACHN,IAAAA,IAAI,EAAG;AADJ,GAAP;AAIH,CALM","sourcesContent":["export const getDataVersion = (data) => {\n        return{\n           type : 'GET_VERSION',\n            data \n        }\n        \n    }\n\n    export const getData = () => {\n        return {\n            type : 'FETCHING_DATA'\n        }\n    }\n \n\nexport const getDataJson = (version, option) => {\n    return{\n       type : 'GET_RES_JSON',\n       version: version,\n       option : option \n    }\n    \n}\n\nexport const parseColor = (color) => {\n    \n    return {\n        color : color\n    }\n}\n\nexport const getVersion = (data) => {\n    return (dispatch) => {\n            dispatch(getDataVersion(data))\n        \n    }\n}\n\nexport const getResJson = (version) => {\n    \n    return (dispatch) => {\n        dispatch(getData())\n    fetch('../../alpine.json')\n    .then((res) => {\n        return res.json()})\n    .then(data => { \n        if (version === 'Pure'){\n            dispatch(getDataJson(data.version.pure, data.option))\n        }else if(version === 'Legende'){\n           dispatch(getDataJson(data.version.legende, data.option))\n        }\n    })\n    .catch(error => console.log(error))\n    }\n \n}\n\n\nexport const parseColorSelected = (color) => {\n    return {\n        type : \"CHOOSEN_COLOR\",\n\n    }\n}\n"]},"metadata":{},"sourceType":"module"}