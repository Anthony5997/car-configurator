{"ast":null,"code":"var _jsxFileName = \"/home/simplon/Documents/redux-car-configurator/src/redux/components/Rims.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Carousel, Button, Icon } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nimport { parseRimsSelected, getMenu } from \"../actions\";\nimport Menu from \"./Menu\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rims = ({\n  state,\n  parseRimsSelected,\n  getMenu\n}) => {\n  let mappedRims = state.rimsJson;\n\n  const getRims = currentSelect => {\n    parseRimsSelected(currentSelect);\n  };\n\n  const displayRims = () => mappedRims.map(rims => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"custom-color-select\",\n          s: 6,\n          m: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: state.currentSelection.rims ? rims.model === state.currentSelection.rims.model ? 'selected' : '' : \"\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              alt: \"rims pictures\",\n              src: rims.pictures[0],\n              onClick: () => getRims(rims)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 24\n            }, this), rims.model, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 27,\n              columnNumber: 24\n            }, this), /*#__PURE__*/_jsxDEV(\"i\", {\n              class: \"material-icons\",\n              children: \"attach_money\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 24\n            }, this), rims.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this)\n    }, rims, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this);\n  });\n\n  const mappedPics = () => state.currentSelection.view.map(pictures => {\n    return `${pictures}`;\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"rims\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"menu\",\n      children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"car-name\",\n      children: state.currentSelection.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: displayRims()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 17\n    }, this), state.currentSelection.rims !== null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rims-carousel\",\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        className: \"carrousel-select\",\n        carouselId: \"Carousel-32\",\n        images: [mappedPics()],\n        options: {\n          fullWidth: true,\n          indicators: true\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"containerButton\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Couleur\",\n        onClick: () => getMenu('color'),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          node: \"button\",\n          waves: \"light\",\n          className: \"blue-grey darken-4\",\n          children: [/*#__PURE__*/_jsxDEV(Icon, {\n            left: true,\n            children: \"arrow_back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this), \"Etape pr\\xE9c\\xE9dente\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Sellerie\",\n        onClick: () => getMenu('sellerie'),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          node: \"button\",\n          waves: \"light\",\n          className: \"blue-grey darken-4\",\n          children: [\"Etape suivante\", /*#__PURE__*/_jsxDEV(Icon, {\n            right: true,\n            children: \"arrow_forward\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 8\n  }, this);\n};\n\n_c = Rims;\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    parseRimsSelected: data => dispatch(parseRimsSelected(data)),\n    getMenu: data => dispatch(getMenu(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Rims);\n\nvar _c;\n\n$RefreshReg$(_c, \"Rims\");","map":{"version":3,"sources":["/home/simplon/Documents/redux-car-configurator/src/redux/components/Rims.js"],"names":["React","connect","Row","Col","Carousel","Button","Icon","Link","parseRimsSelected","getMenu","Menu","Rims","state","mappedRims","rimsJson","getRims","currentSelect","displayRims","map","rims","currentSelection","model","pictures","price","mappedPics","view","name","fullWidth","indicators","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Carousel, Button, Icon } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nimport { parseRimsSelected, getMenu } from \"../actions\";\nimport Menu from \"./Menu\";\n\n\n\nconst Rims = ({state, parseRimsSelected, getMenu}) => {\n\n    let mappedRims = state.rimsJson\n\n    const getRims = (currentSelect) => {\n            parseRimsSelected(currentSelect)\n    }\n\n\n    const displayRims = () => mappedRims.map((rims) => {\n        return (\n            <div key={rims} >\n                <div className=\"container\">\n                    <Col className=\"custom-color-select\" s={6} m={6} >\n                       <div className={state.currentSelection.rims ? rims.model === state.currentSelection.rims.model ? 'selected' : '' : \"\"} >\n                       <img alt=\"rims pictures\" src={rims.pictures[0]} onClick={() => (getRims(rims))}/>\n                       {rims.model}\n                       <br/>\n                       <i class=\"material-icons\">attach_money</i>{rims.price}\n                       </div>\n                    </Col>\n                </div>\n            </div>\n        )\n    })\n\n    const mappedPics = () => state.currentSelection.view.map((pictures) => {\n        return (\n            `${pictures}`\n        )\n    })\n\n    return(\n\n       <div className='rims'>\n            <div className='menu'>\n        <Menu />\n        </div> \n           <h3 className=\"car-name\">{state.currentSelection.name}</h3>     \n                <Row>\n                    {displayRims()}\n                </Row>\n                \n            {state.currentSelection.rims !== null && \n                <div className=\"rims-carousel\">\n                <Carousel \n                        className=\"carrousel-select\"\n                        carouselId=\"Carousel-32\"\n                        images={[\n                        mappedPics()\n                        ]}\n                        options={{\n                            fullWidth: true,\n                            indicators: true,\n                        }}\n                        /> \n                </div>  \n            }\n            <div className=\"containerButton\">\n                    <Link to=\"/Couleur\" onClick={()=>getMenu('color')}>\n                       \n                        <Button node=\"button\" waves=\"light\" className='blue-grey darken-4'>\n                            <Icon left>\n                                arrow_back\n                            </Icon>\n                            Etape précédente\n                            \n                        </Button>\n                        \n                    </Link>\n\n                    <Link to=\"/Sellerie\" onClick={()=>getMenu('sellerie')}>\n                      \n                        <Button node=\"button\" waves=\"light\" className='blue-grey darken-4'>\n                            Etape suivante\n                            <Icon right>\n                             arrow_forward\n                            </Icon>\n                        </Button>\n                        \n                    </Link>\n            </div>\n        </div>\n    )}\n\nconst mapStateToProps = state =>{\n    return{\n        state: state,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n\n        parseRimsSelected: (data)=> dispatch(parseRimsSelected(data)),\n        getMenu: (data)=> dispatch(getMenu(data))\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Rims)"]},"metadata":{},"sourceType":"module"}