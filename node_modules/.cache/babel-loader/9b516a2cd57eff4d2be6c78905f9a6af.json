{"ast":null,"code":"var _jsxFileName = \"/home/simplon/Documents/redux-car-configurator/src/redux/components/Versions.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon, Button } from 'react-materialize';\nimport { getVersion, getResJson } from \"../actions\";\nimport { Link } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Versions = ({\n  state,\n  getVersion,\n  getResJson\n}) => {\n  const onColor = version => {\n    getVersion(version);\n    getResJson(version);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: state.version === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"choiseVersion\",\n      children: [/*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Configurateur\",\n        onClick: () => onColor('Pure'),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"blue-grey lighten-5 black-text pulse\",\n          node: \"a\",\n          waves: \"light\",\n          children: [\"Pure \", /*#__PURE__*/_jsxDEV(Icon, {\n            right: true,\n            children: \" settings_applications \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/Configurateur\",\n        onClick: () => onColor('Legende'),\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          className: \"blue-grey darken-4 pulse\",\n          href: \"/Configurateur\",\n          node: \"a\",\n          waves: \"light\",\n          children: [\"Legende \", /*#__PURE__*/_jsxDEV(Icon, {\n            right: true,\n            children: \" settings_applications \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Versions;\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    getVersion: choseVersion => dispatch(getVersion(choseVersion)),\n    getResJson: version => dispatch(getResJson(version))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Versions);\n\nvar _c;\n\n$RefreshReg$(_c, \"Versions\");","map":{"version":3,"sources":["/home/simplon/Documents/redux-car-configurator/src/redux/components/Versions.js"],"names":["React","connect","Icon","Button","getVersion","getResJson","Link","Versions","state","onColor","version","mapStateToProps","mapDispatchToProps","dispatch","choseVersion"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,IAAT,EAAgBC,MAAhB,QAA6B,mBAA7B;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,YAAvC;AACA,SAASC,IAAT,QAAqB,kBAArB;;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQJ,EAAAA,UAAR;AAAoBC,EAAAA;AAApB,CAAD,KAAqC;AAElD,QAAMI,OAAO,GAAIC,OAAD,IAAa;AAC3BN,IAAAA,UAAU,CAACM,OAAD,CAAV;AACAL,IAAAA,UAAU,CAACK,OAAD,CAAV;AAED,GAJD;;AAMJ,sBACI;AAAA,cACIF,KAAK,CAACE,OAAN,KAAkB,IAAlB,iBAEA;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,8BAEE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,gBAAT;AAA0B,QAAA,OAAO,EAAE,MAAID,OAAO,CAAC,MAAD,CAA9C;AAAA,+BACI,QAAC,MAAD;AACA,UAAA,SAAS,EAAC,sCADV;AAGC,UAAA,IAAI,EAAC,GAHN;AAIE,UAAA,KAAK,EAAC,OAJR;AAAA,2CAMO,QAAC,IAAD;AAAM,YAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANP;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAFF,eAYE,QAAC,IAAD;AAAM,QAAA,EAAE,EAAC,gBAAT;AAA0B,QAAA,OAAO,EAAE,MAAIA,OAAO,CAAC,SAAD,CAA9C;AAAA,+BAEI,QAAC,MAAD;AACA,UAAA,SAAS,EAAC,0BADV;AAGE,UAAA,IAAI,EAAC,gBAHP;AAIE,UAAA,IAAI,EAAC,GAJP;AAKE,UAAA,KAAK,EAAC,OALR;AAAA,8CAOU,QAAC,IAAD;AAAM,YAAA,KAAK,MAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAZF;AAAA;AAAA;AAAA;AAAA;AAAA;AAHJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAiCE,CAzCF;;KAAMF,Q;;AA0CN,MAAMI,eAAe,GAAGH,KAAK,IAAG;AAC5B,SAAM;AACFA,IAAAA,KAAK,EAAGA;AADN,GAAN;AAGH,CAJD;;AAKA,MAAMI,kBAAkB,GAAGC,QAAQ,IAAI;AACnC,SAAM;AACJT,IAAAA,UAAU,EAAEU,YAAD,IAAiBD,QAAQ,CAACT,UAAU,CAACU,YAAD,CAAX,CADhC;AAEJT,IAAAA,UAAU,EAAEK,OAAD,IAAYG,QAAQ,CAACR,UAAU,CAACK,OAAD,CAAX;AAF3B,GAAN;AAIH,CALD;;AAMA,eAAeT,OAAO,CAACU,eAAD,EAAkBC,kBAAlB,CAAP,CAA6CL,QAA7C,CAAf","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Icon , Button} from 'react-materialize';\nimport { getVersion, getResJson } from \"../actions\";\nimport { Link } from \"react-router-dom\";\n\n \nconst Versions = ({state, getVersion, getResJson}) => {\n\n    const onColor = (version) => {\n      getVersion(version)\n      getResJson(version)\n    \n    }\n\nreturn(\n    <div>\n      { state.version === null &&\n  \n        <div className='choiseVersion'>\n     \n          <Link to='/Configurateur' onClick={()=>onColor('Pure')}>\n              <Button\n              className='blue-grey lighten-5 black-text pulse'\n                \n               node=\"a\"\n                waves=\"light\"\n              >\n                Pure <Icon right> settings_applications </Icon>\n              </Button>\n          </Link>\n          <Link to='/Configurateur' onClick={()=>onColor('Legende')}>\n          \n              <Button\n              className='blue-grey darken-4 pulse'\n                \n                href=\"/Configurateur\"\n                node=\"a\"\n                waves=\"light\"\n              >\n                Legende <Icon right> settings_applications </Icon>\n              </Button>\n            </Link>\n         \n        </div>\n      }\n    \n    </div>\n)}\nconst mapStateToProps = state =>{\n    return{\n        state : state\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n      getVersion:(choseVersion)=> dispatch(getVersion(choseVersion)),\n      getResJson:(version)=> dispatch(getResJson(version)),\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Versions)"]},"metadata":{},"sourceType":"module"}