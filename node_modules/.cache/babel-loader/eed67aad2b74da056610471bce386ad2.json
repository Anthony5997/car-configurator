{"ast":null,"code":"var _jsxFileName = \"/home/simplon/Documents/redux-car-configurator/src/redux/components/Rims.js\";\nimport React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Carousel, Button, Icon } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nimport { parseRimsSelected } from \"../actions\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Rims = ({\n  state,\n  parseRimsSelected\n}) => {\n  let mappedRims = state.rimsJson;\n\n  const getRims = currentSelect => {\n    parseRimsSelected(currentSelect);\n  };\n\n  console.log(\"RIMS : \", state);\n\n  const displayRims = () => mappedRims.map(rims => {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Col, {\n          className: \"\",\n          s: 6,\n          m: 6,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"custom-color-select\",\n            children: [/*#__PURE__*/_jsxDEV(\"img\", {\n              src: rims.pictures[0],\n              onClick: () => getRims(rims)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 24\n            }, this), rims.model, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 30,\n              columnNumber: 24\n            }, this), \" Prix : \" + rims.price]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this)\n    }, rims, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this);\n  });\n\n  const mappedPics = () => state.currentSelection.view.map(key => {\n    return `${key}`;\n  });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"car-name\",\n      children: state.currentSelection.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(Carousel, {\n        className: \"carrousel-select\",\n        carouselId: \"Carousel-2\",\n        images: [mappedPics()],\n        options: {\n          dist: 0,\n          duration: 200,\n          fullWidth: true,\n          indicators: true,\n          noWrap: false,\n          numVisible: 5,\n          onCycleTo: null,\n          padding: 0,\n          shift: 0\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 13\n    }, this), state.currentSelection.color === null && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"select-car-please\",\n        children: \" Please, select a car.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: displayRims()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Row, {\n      children: [/*#__PURE__*/_jsxDEV(Col, {\n        m: 2,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Couleur\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"next-step\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              node: \"button\",\n              waves: \"light\",\n              children: [\"Previous step\", /*#__PURE__*/_jsxDEV(Icon, {\n                right: true,\n                children: \"arrow_back\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        m: 8\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Col, {\n        m: 2,\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/Sellerie\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"next-step\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              node: \"button\",\n              waves: \"light\",\n              children: [\"Next step\", /*#__PURE__*/_jsxDEV(Icon, {\n                right: true,\n                children: \"arrow_forward\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 8\n  }, this);\n};\n\n_c = Rims;\n\nconst mapStateToProps = state => {\n  return {\n    state: state\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    parseRimsSelected: data => dispatch(parseRimsSelected(data))\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Rims);\n\nvar _c;\n\n$RefreshReg$(_c, \"Rims\");","map":{"version":3,"sources":["/home/simplon/Documents/redux-car-configurator/src/redux/components/Rims.js"],"names":["React","connect","Row","Col","Carousel","Button","Icon","Link","parseRimsSelected","Rims","state","mappedRims","rimsJson","getRims","currentSelect","console","log","displayRims","map","rims","pictures","model","price","mappedPics","currentSelection","view","key","name","dist","duration","fullWidth","indicators","noWrap","numVisible","onCycleTo","padding","shift","color","mapStateToProps","mapDispatchToProps","dispatch","data"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { Row, Col, Carousel, Button, Icon } from 'react-materialize';\nimport { Link } from 'react-router-dom';\nimport { parseRimsSelected } from \"../actions\";\n\n\n\nconst Rims = ({state, parseRimsSelected}) => {\n\n\n    let mappedRims = state.rimsJson\n\n    const getRims = (currentSelect) => {\n            parseRimsSelected(currentSelect)\n    }\n\n    console.log(\"RIMS : \", state);\n\n\n\n    const displayRims = () => mappedRims.map((rims) => {\n        return (\n            <div key={rims}>\n                <div className=\"container\">\n                    <Col className=\"\" s={6} m={6} >\n                       <div className=\"custom-color-select\">\n                       <img src={rims.pictures[0]} onClick={() => (getRims(rims))}/>\n                       {rims.model}\n                       <br/>\n                       {\" Prix : \" +rims.price}\n                       </div>\n                    </Col>\n                </div>\n            </div>\n        )\n    })\n\n    const mappedPics = () => state.currentSelection.view.map((key) => {\n        return (\n            `${key}`\n        )\n    })\n\n    return(\n\n       <div>\n           <h3 className=\"car-name\">{state.currentSelection.name}</h3>\n            <div className=\"container\">\n            <Carousel \n                    className=\"carrousel-select\"\n                    carouselId=\"Carousel-2\"\n                    images={[\n                    mappedPics()\n                    ]}\n                    options={{\n                        dist: 0,\n                        duration: 200,\n                        fullWidth: true,\n                        indicators: true,\n                        noWrap: false,\n                        numVisible: 5,\n                        onCycleTo: null,\n                        padding: 0,\n                        shift: 0\n                    }}\n                />\n            </div>\n            {state.currentSelection.color === null &&\n                <div className=\"container\">\n                    <h1 className=\"select-car-please\"> Please, select a car.</h1>\n                </div>\n            }\n            <Row>\n            {displayRims()}\n\n            </Row>\n            <Row>\n                <Col m={2}>\n                    <Link to=\"/Couleur\">\n                        <div className=\"next-step\">\n                        <Button node=\"button\" waves=\"light\">\n                            Previous step\n                            <Icon right>\n                            arrow_back\n                            </Icon>\n                        </Button>\n                        </div>\n                    </Link>\n                </Col>\n                <Col m={8}>\n                </Col>\n                <Col m={2}>\n                    <Link to=\"/Sellerie\">\n                        <div className=\"next-step\">\n                        <Button node=\"button\" waves=\"light\">\n                            Next step\n                            <Icon right>\n                            arrow_forward\n                            </Icon>\n                        </Button>\n                        </div>\n                    </Link>\n                </Col>\n            </Row>\n        </div>\n    )}\n\nconst mapStateToProps = state =>{\n    return{\n        state: state,\n    }\n}\nconst mapDispatchToProps = dispatch => {\n    return{\n\n        parseRimsSelected: (data)=> dispatch(parseRimsSelected(data)),\n\n    }\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(Rims)"]},"metadata":{},"sourceType":"module"}